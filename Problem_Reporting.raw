<domain>
<name>Problem_Reporting</name>
<documentation></documentation>
<classes>
<class>
<name>Problem Report</name>
<documentation>A Problem Report is raised when a person believes that there is a problem with the software that is being managed ("the Software").

[[ max : 10100 ]]
</documentation>
<attributes>
<attribute stereotype="id">
<name>id</name>
<documentation>An integer allocated uniquely to identify Problem Reports.</documentation>
<type>integer</type>
<initial></initial>
</attribute>
<attribute>
<name>details</name>
<documentation>The text of the Problem Report.</documentation>
<type>Text</type>
<initial></initial>
</attribute>
<attribute>
<name>reporter</name>
<documentation>The email address of the person who originally raised the Problem Report.</documentation>
<type>Text</type>
<initial></initial>
</attribute>
</attributes>
<operations>
</operations>
</class>
<class>
<name>Rejected Problem Report</name>
<documentation>A Rejected Problem Report is one that has been evaluated not to be in fact an error in the Software.</documentation>
<attributes>
<attribute>
<name>rejection reason</name>
<documentation>The Rejection Reason is a summary of the reason that the Problem Report has been rejected.</documentation>
<type>Summary String</type>
<initial></initial>
</attribute>
</attributes>
<operations>
</operations>
</class>
<class>
<name>Diagnosed Problem Report</name>
<documentation>A Diagnosed Problem Report is a valid Problem Report that has been related to the erroneous Components via the associated Defect(s).</documentation>
<attributes>
</attributes>
<operations>
</operations>
</class>
<class>
<name>Component</name>
<documentation>A Component is an element of the Software. It may be code, documentation, test scripts, makefiles etc.

Purely for demonstration purposes, the maximum number of Components is limited to 4.

[[max: 4]]
</documentation>
<attributes>
<attribute stereotype="id">
<name>id</name>
<documentation>Id is the name of the software Component. It uniquely identifies the Component.</documentation>
<type>Text</type>
<initial></initial>
</attribute>
</attributes>
<operations>
</operations>
</class>
<class>
<name>Unallocated Problem Report</name>
<documentation>An Unallocated Problem Report is awaiting determination of appropriate handling.

If it's decided not in fact to be a problem, it will be rejected (see Rejected Problem Report).

If it is really a problem, it will become a Diagnosed Problem Report.

[[ abbreviation : UPR ]]
</documentation>
<attributes>
</attributes>
<operations>
</operations>
</class>
<class>
<name>Defect</name>
<documentation>A Defect denotes something that is wrong with a Component.

It should be expressed at the logical level -- it's not intended to be an edit script, detailing the exact changes to be made.

It should address one logical error (which may correspond to several necessary changes in the affected Component).</documentation>
<attributes>
<attribute>
<name>problem</name>
<documentation>Contains a description of the Defect.</documentation>
<type>Text</type>
<initial></initial>
</attribute>
</attributes>
<operations>
</operations>
</class>
<class stereotype="type">
<name>Summary String</name>
<documentation>A Summary String is used to hold brief statements.

[[string: max 80]]
</documentation>
<attributes>
</attributes>
<operations>
</operations>
</class>
<class stereotype="Interface">
<name>Interface</name>
<documentation>Provides the public interface to the Problem Reporting domain.</documentation>
<attributes>
</attributes>
<operations>
<operation>
<name>add component</name>
<documentation>Add a Component to the set of Components known to the System.</documentation>
<parameters>
<parameter>
<name>named</name>
<documentation>The name of the Component to be added.</documentation>
<type>String</type>
<initial></initial>
</parameter>
</parameters>
</operation>
<operation>
<name>add problem</name>
<documentation>Adds a Problem to the set of Problems known to the system. The Problem is initially Unallocated.</documentation>
<parameters>
<parameter>
<name>number</name>
<documentation>The identifying Number of the Problem_Report.</documentation>
<type>Integer</type>
<initial></initial>
</parameter>
<parameter>
<name>reporter</name>
<documentation>The e-mail address of the person reporting the problem.</documentation>
<type>String</type>
<initial></initial>
</parameter>
<parameter>
<name>details</name>
<documentation>A description of the problem.</documentation>
<type>String</type>
<initial></initial>
</parameter>
</parameters>
</operation>
<operation>
<name>delete component</name>
<documentation>Deletes the named Component.</documentation>
<parameters>
<parameter>
<name>component name</name>
<documentation>The identifying name of the Component to be deleted.</documentation>
<type>String</type>
<initial></initial>
</parameter>
</parameters>
</operation>
<operation>
<name>note defect</name>
<documentation>A Defect has been discovered in the given Component, related to the given Problem Report.</documentation>
<parameters>
<parameter>
<name>problem number</name>
<documentation>The identifying Number of the Problem Report.</documentation>
<type>Integer</type>
<initial></initial>
</parameter>
<parameter>
<name>component name</name>
<documentation>Thw identifying Name of the Component.</documentation>
<type>String</type>
<initial></initial>
</parameter>
<parameter>
<name>description</name>
<documentation>The particular defect in this Component that results in the given Problem Report.</documentation>
<type>String</type>
<initial></initial>
</parameter>
</parameters>
</operation>
<operation>
<name>reject problem</name>
<documentation>The indicated Problem has been determined not to be valid: reject it.</documentation>
<parameters>
<parameter>
<name>number</name>
<documentation>The identifying Number of the Problem Report.</documentation>
<type>Integer</type>
<initial></initial>
</parameter>
<parameter>
<name>reason</name>
<documentation>The reason for rejecting the Problem Report.</documentation>
<type>String</type>
<initial></initial>
</parameter>
</parameters>
</operation>
<operation>
<name>report problems</name>
<documentation>Generate a report on each Component known to the system, detailing any related Problem Reports and the associated Defects.</documentation>
<parameters>
</parameters>
</operation>
</operations>
</class>
</classes>
<relationships>
<association>
<name>r100</name>
<documentation>When a Problem Report has been determined to be related to one or more Components, it's said to have been Diagnosed.

Every Diagnosed Problem Report is associated with at least one Component.

A Component may be associated with one or more Diagnosed Problem Reports.

The actual problem with the Component is held in the associated Defect.

In the case that the diagnosis is that a new Component is needed (some additional documentation, for example) , the Component must be created before this relationship can be set up.</documentation>
<role><end>2</end>
<name>affects</name>
<classname>Component</classname>
<cardinality>1..n</cardinality>
<documentation></documentation>
</role>
<role><end>1</end>
<name>is affected by</name>
<classname>Diagnosed Problem Report</classname>
<cardinality>0..n</cardinality>
<documentation></documentation>
</role>
<associative>Defect</associative>
</association>
<inheritance>
<name>r1</name>
<documentation></documentation>
<child>Rejected Problem Report</child>
<parent>Problem Report</parent>
</inheritance>
<inheritance>
<name>r1</name>
<documentation></documentation>
<child>Diagnosed Problem Report</child>
<parent>Problem Report</parent>
</inheritance>
<inheritance>
<name>r1</name>
<documentation></documentation>
<child>Unallocated Problem Report</child>
<parent>Problem Report</parent>
</inheritance>
</relationships>
</domain>
