#  Copyright (C) Simon Wright <simon@pushface.org>

#  This package is free software; you can redistribute it and/or
#  modify it under terms of the GNU General Public License as
#  published by the Free Software Foundation; either version 2, or
#  (at your option) any later version. This package is distributed in
#  the hope that it will be useful, but WITHOUT ANY WARRANTY; without
#  even the implied warranty of MERCHANTABILITY or FITNESS FOR A
#  PARTICULAR PURPOSE. See the GNU General Public License for more
#  details. You should have received a copy of the GNU General Public
#  License distributed with this package; see file COPYING.  If not,
#  write to the Free Software Foundation, 59 Temple Place - Suite
#  330, Boston, MA 02111-1307, USA.

# $Id$

# Makefile for tests, use with Cygwin under Windows or Unix (assumes a
# Unix system if Cygwin not detected)

sys = $(shell uname)
ifneq (, $(findstring CYGWIN, $(sys)))
  system = winnt
  exe = .exe
else
  system = unix
  exe =
endif

parent = ../Makefile-$(system)

all:: runs fails

runs:: regression_tests$(exe)
	./$< -v 2>&1 | tee --append regressions.log

runs:: event_test-harness$(exe)
	./$< -v 2>&1 | tee --append event_test.log

runs:: hierarchies-harness$(exe)
	./$< -v 2>&1 | tee --append hierarchies.log

runs:: stub_test_harness$(exe)
	./$< -v 2>&1 | tee --append stub_test.log

fails:: Bad_Model_Regressions.gen

fails:: Bad_Code_Regressions.gen

regression_tests$(exe): Regressions.gen force
	gnatmake -P Regressions 2>&1 | tee --append regressions.log

event_test-harness$(exe): Event_Test.gen force
	gnatmake -P Event_Test 2>&1 | tee --append event_test.log

hierarchies-harness$(exe): Hierarchies.gen force
	gnatmake -P Hierarchies 2>&1 | tee --append hierarchies.log

stub_test_harness$(exe): Stub_Test_Interface.gen force
	gnatmake -P Stub_Test 2>&1 | tee --append stub_test.log

Regressions.gen: force
	$(MAKE) -f $(parent) $@ 2>&1 | tee regressions.log

Event_Test.gen: force
	$(MAKE) -f $(parent) $@ 2>&1 | tee event_test.log

Hierarchies.gen: force
	$(MAKE) -f $(parent) $@ 2>&1 | tee hierarchies.log

Stub_Test_Interface.gen: force
	$(MAKE) -f $(parent) $@ GENERATE_STUBS=yes 2>&1 | tee stub_test.log

Bad_Model_Regressions.gen: force
	-$(MAKE) -f $(parent) $@ 2>&1 | tee bad_model_regressions.log
	@true

Bad_Code_Regressions.gen: force
	-$(MAKE) -f $(parent) $@ 2>&1 | tee bad_code_regressions.log
	@true

.PHONY: force

#;; for emacs:
#;; Local Variables:
#;; mode: makefile
#;; End:
