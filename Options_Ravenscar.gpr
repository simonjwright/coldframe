--  Copyright (C) Simon Wright <simon@pushface.org>

--  This package is free software; you can redistribute it and/or
--  modify it under terms of the GNU General Public License as
--  published by the Free Software Foundation; either version 2, or
--  (at your option) any later version. This package is distributed in
--  the hope that it will be useful, but WITHOUT ANY WARRANTY; without
--  even the implied warranty of MERCHANTABILITY or FITNESS FOR A
--  PARTICULAR PURPOSE. See the GNU General Public License for more
--  details. You should have received a copy of the GNU General Public
--  License distributed with this package; see file COPYING.  If not,
--  write to the Free Software Foundation, 59 Temple Place - Suite
--  330, Boston, MA 02111-1307, USA.

--  This file provides default compilation options for ColdFrame for a
--  Ravenscar target on Cortex.

abstract project Options_Ravenscar is

   --  This project has no associated sources.
   for Source_Files use ();

   CORTEX_GNAT_RTS := external ("HOME") & "/cortex-gnat-rts/local";

   type RTS_Type is ("stm32f4", "arduino", "full", "sfp", "native");

   RTS : RTS_Type := external ("RTS", "stm32f4");

   case RTS is
      when "native" =>
         null;
      when others =>
         for Target use "arm-eabi";
   end case;

   case RTS is
      when "stm32f4" =>
         for Runtime ("ada") use CORTEX_GNAT_RTS & "/stm32f4";
      when "arduino" =>
         for Runtime ("ada") use CORTEX_GNAT_RTS & "/arduino-due";
      when "full" =>
         for Runtime ("ada") use "ravenscar-full-stm32f4";
      when "sfp" =>
         for Runtime ("ada") use "ravenscar-sfp-stm32f4";
      when "native" =>
         null;
   end case;

   type Build_Type is ("Production", "Debug");
   Build : Build_Type := external ("BUILD", "Debug");

   COMPILER_SWITCHES :=
     (
      --  keep .alis, assertions, full messages, hardware overflow
      --  checks, style checks
      "-gnatqQafoy",
      --  All standard warnings except elaboration problems
      "-gnatwaL",
      "-gnat12",
      "-g"
     );
   case RTS is
      when "native" =>
         null;
      when others =>
         COMPILER_SWITCHES := COMPILER_SWITCHES &
           (
            --  .. dead code elimination (with -fgc-sections at link)
            "-ffunction-sections",
            "-fdata-sections",
            --  .. non-local exceptions (exceptions invoking Last
            --  Chance Handler: expected!)
            "-gnatw.X"
           );
   end case;
   case Build is
      when "Production" =>
         COMPILER_SWITCHES := COMPILER_SWITCHES & ("-O2");
      when "Debug" =>
         COMPILER_SWITCHES := COMPILER_SWITCHES & ("-Og");
   end case;

   --  Builder configuration options.
   package Builder is
   end Builder;

   --  GCC configuration options.
   package Compiler is
      for Switches ("ada") use COMPILER_SWITCHES;
   end Compiler;

   -- GNATBIND configuration options.
   package Binder is
      for Default_Switches ("ada") use ("-E");
   end Binder;

   --  GNATLINK configuration options
   package Linker is
      case RTS is
         when "native" =>
            null;
         when others =>
            for Default_Switches ("ada") use ("-Wl,-gc-sections");

            --  The link is done in the Object_Dir; assume this is
            --  immediately below the project directory.
            --
            --  Still need the Builder switch --create-map-file
            --  (remember, there may be mode than one main in this
            --  project).
            for Map_File_Option use "-Wl,-Map,../";
      end case;
   end Linker;

end Options_Ravenscar;
